depends_on:
- check
kind: pipeline
name: docker-amd64
platform:
  arch: amd64
  os: linux
services:
- image: registry:2
  name: registry
steps:
- commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags
  image: alpine
  name: image-tag
- command:
  - apt-get update && apt-get install -y curl docker kubectl python-pip
  - curl -sfL https://get.k3s.io | sh -
  - chmod 755 /etc/rancher/k3s/k3s.yaml
  - mkdir -p ~/.kube
  - cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
  - curl -L https://git.io/get_helm.sh | bash
  - kubectl apply -f tools/helm.yaml
  - helm init --service-account helm --wait
  - pip install yamale yamllint
  - curl -Lo ct.tgz https://github.com/helm/chart-testing/releases/download/v${CT_VERSION}/chart-testing_${CT_VERSION}_linux_amd64.tar.gz
  - tar -C /usr/local/bin -xvf ct.tgz
  - mv /usr/local/bin/etc /etc/ct/
  - ct lint --chart-dirs=production/helm --check-version-increment=false --validate-maintainers=false
  - ct install--build-id=${CI_BUILD_NUMBER} --charts production/helm/loki-stack
  environment:
    CT_VERSION: 2.3.3
  name: helm-test
  when:
    ref:
      exclude:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-loki-image
  settings:
    dockerfile: cmd/loki/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/loki
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-loki-canary-image
  settings:
    dockerfile: cmd/loki-canary/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/loki-canary
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-promtail-image
  settings:
    dockerfile: cmd/promtail/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/promtail
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
---
depends_on:
- check
kind: pipeline
name: docker-arm64
platform:
  arch: arm64
  os: linux
services:
- image: registry:2
  name: registry
steps:
- commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-arm64 > .tags
  image: alpine
  name: image-tag
- command:
  - apt-get update && apt-get install -y curl docker kubectl python-pip
  - curl -sfL https://get.k3s.io | sh -
  - chmod 755 /etc/rancher/k3s/k3s.yaml
  - mkdir -p ~/.kube
  - cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
  - curl -L https://git.io/get_helm.sh | bash
  - kubectl apply -f tools/helm.yaml
  - helm init --service-account helm --wait
  - pip install yamale yamllint
  - curl -Lo ct.tgz https://github.com/helm/chart-testing/releases/download/v${CT_VERSION}/chart-testing_${CT_VERSION}_linux_amd64.tar.gz
  - tar -C /usr/local/bin -xvf ct.tgz
  - mv /usr/local/bin/etc /etc/ct/
  - ct lint --chart-dirs=production/helm --check-version-increment=false --validate-maintainers=false
  - ct install--build-id=${CI_BUILD_NUMBER} --charts production/helm/loki-stack
  environment:
    CT_VERSION: 2.3.3
  name: helm-test
  when:
    ref:
      exclude:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-loki-image
  settings:
    dockerfile: cmd/loki/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/loki
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-loki-canary-image
  settings:
    dockerfile: cmd/loki-canary/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/loki-canary
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-promtail-image
  settings:
    dockerfile: cmd/promtail/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/promtail
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
---
depends_on:
- check
kind: pipeline
name: docker-arm
platform:
  arch: arm
  os: linux
services:
- image: registry:2
  name: registry
steps:
- commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-arm > .tags
  image: alpine
  name: image-tag
- command:
  - apt-get update && apt-get install -y curl docker kubectl python-pip
  - curl -sfL https://get.k3s.io | sh -
  - chmod 755 /etc/rancher/k3s/k3s.yaml
  - mkdir -p ~/.kube
  - cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
  - curl -L https://git.io/get_helm.sh | bash
  - kubectl apply -f tools/helm.yaml
  - helm init --service-account helm --wait
  - pip install yamale yamllint
  - curl -Lo ct.tgz https://github.com/helm/chart-testing/releases/download/v${CT_VERSION}/chart-testing_${CT_VERSION}_linux_amd64.tar.gz
  - tar -C /usr/local/bin -xvf ct.tgz
  - mv /usr/local/bin/etc /etc/ct/
  - ct lint --chart-dirs=production/helm --check-version-increment=false --validate-maintainers=false
  - ct install--build-id=${CI_BUILD_NUMBER} --charts production/helm/loki-stack
  environment:
    CT_VERSION: 2.3.3
  name: helm-test
  when:
    ref:
      exclude:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-loki-image
  settings:
    dockerfile: cmd/loki/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/loki
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-loki-canary-image
  settings:
    dockerfile: cmd/loki-canary/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/loki-canary
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-promtail-image
  settings:
    dockerfile: cmd/promtail/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/promtail
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
---
depends_on:
- check
kind: pipeline
name: fluent-bit-amd64
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags
  - echo ",latest,master" >> .tags
  image: alpine
  name: image-tag
- image: plugins/docker
  name: build-fluent-bit-image
  settings:
    dockerfile: cmd/fluent-bit/Dockerfile
    dry_run: true
    insecure: true
    registry: registry:5000
    repo: registry:5000/fluent-bit
    tags: latest
  when:
    ref:
      exclude:
      - refs/heads/master
      - refs/tags/v*
- depends_on:
  - image-tag
  image: plugins/docker
  name: publish-fluent-bit-image
  settings:
    dockerfile: cmd/fluent-bit/Dockerfile
    dry_run: false
    password:
      from_secret: docker_password
    repo: grafana/fluent-bit-plugin-loki
    username:
      from_secret: docker_username
  when:
    ref:
      include:
      - refs/heads/master
      - refs/tags/v*
---
depends_on:
- docker-amd64
- docker-arm64
- docker-arm
kind: pipeline
name: manifest
steps:
- depends_on:
  - clone
  image: plugins/manifest
  name: manifest-promtail
  settings:
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: .drone/docker-manifest.tmpl
    target: promtail
    username:
      from_secret: docker_username
- depends_on:
  - clone
  image: plugins/manifest
  name: manifest-loki
  settings:
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: .drone/docker-manifest.tmpl
    target: loki
    username:
      from_secret: docker_username
- depends_on:
  - clone
  image: plugins/manifest
  name: manifest-loki-canary
  settings:
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: .drone/docker-manifest.tmpl
    target: loki-canary
    username:
      from_secret: docker_username
trigger:
  ref:
    include:
    - refs/heads/master
    - refs/tags/v*
---
depends_on:
- manifest
kind: pipeline
name: deploy
steps:
- commands:
  - ./tools/deploy.sh
  environment:
    CIRCLE_TOKEN:
      from_secret: circle_token
  image: grafana/loki-build-image:0.7.4
  name: trigger
trigger:
  ref:
    include:
    - refs/heads/master
    - refs/tags/v*
